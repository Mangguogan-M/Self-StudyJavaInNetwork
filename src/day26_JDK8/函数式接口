(1)什么是函数式接口
	所谓的函数式接口，当然首先是一个接口，然后就是在这个接口里面只能有一个抽象方法。这种类型的接口也称为SAM接口
	，即Single Abstract Method interfaces。(一个抽象方法、单一抽象方法接口)需要注意的是接口的默认方法和静态方
	法并不影响一个接口成为函数式接口。
	
(2)@FunctionlInterface注解
	Java 8为函数式接口引入了一个新注解@FunctionalInterface，主要用于编译级错误检查，加上该注解，当你写的接口不
	符合函数式接口定义的时候，编译器会报错。

	
注意：函数式接口允许定义静态方法、默认方法、Object中的方法


(3)JDK中的函数式接口
	JDK1.8之前已有的函数式接口有：
		java.lang.Runnable
		java.util.concurrent.Callable
		java.security.PrivilegedAction
		java.util.Comparator
		java.io.FileFilter
		java.nio.file.PathMatcher
		java.lang.reflect.InvocationHandler
		java.beans.PropertyChangeListener
		java.awt.event.ActionListener
		javax.swing.event.ChangeListener
		
	JDK 1.8新增的函数接口：
		java.util.function 它包含了很多的类，用支持Java的函数编程。
		
除了早期存在的Runnable,Comparator等函数式接口之外，jdk8中又增加了java.util.function包，其中提供了常用的函数式接口,比如：
	1.Predicate
	2.Function
	3.Consumer
	4.Supplier
	

演示用lambda来实现Runnable接口的示例  

		
		
		